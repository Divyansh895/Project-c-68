{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nimport React, { Component } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar RideScreen = function (_Component) {\n  _inherits(RideScreen, _Component);\n  var _super = _createSuper(RideScreen);\n  function RideScreen() {\n    _classCallCheck(this, RideScreen);\n    return _super.apply(this, arguments);\n  }\n  _createClass(RideScreen, [{\n    key: \"render\",\n    value: function render() {\n      return _jsx(View, {\n        style: styles.container,\n        children: _jsx(Text, {\n          style: styles.text,\n          children: \"Ride Screen\"\n        })\n      });\n    }\n  }]);\n  return RideScreen;\n}(Component);\nexport { RideScreen as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"#D0E6F0\"\n  },\n  text: {\n    color: \"#4C5D70\",\n    fontSize: 30\n  }\n});","map":{"version":3,"names":["React","Component","View","Text","StyleSheet","jsx","_jsx","RideScreen","_Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","value","render","style","styles","container","children","text","default","create","flex","justifyContent","alignItems","backgroundColor","color","fontSize"],"sources":["/Users/divyanshpatel/Documents/Coding/New Coding-whitehat/PROJECT-C68-/screens/Ride.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport { View, Text, StyleSheet } from \"react-native\";\n\nexport default class RideScreen extends Component {\n  render() {\n    return (\n      <View style={styles.container}>\n        <Text style={styles.text}>Ride Screen</Text>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"#D0E6F0\"\n  },\n  text: {\n    color: \"#4C5D70\",\n    fontSize: 30\n  }\n});\n"],"mappings":";;;;;;;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAAA,IAGpBC,UAAU,aAAAC,UAAA;EAAAC,SAAA,CAAAF,UAAA,EAAAC,UAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,UAAA;EAAA,SAAAA,WAAA;IAAAK,eAAA,OAAAL,UAAA;IAAA,OAAAG,MAAA,CAAAG,KAAA,OAAAC,SAAA;EAAA;EAAAC,YAAA,CAAAR,UAAA;IAAAS,GAAA;IAAAC,KAAA,EAC7B,SAAAC,OAAA,EAAS;MACP,OACEZ,IAAA,CAACJ,IAAI;QAACiB,KAAK,EAAEC,MAAM,CAACC,SAAU;QAAAC,QAAA,EAC5BhB,IAAA,CAACH,IAAI;UAACgB,KAAK,EAAEC,MAAM,CAACG,IAAK;UAAAD,QAAA;QAAA,CAAkB;MAAC,CACxC,CAAC;IAEX;EAAC;EAAA,OAAAf,UAAA;AAAA,EAPqCN,SAAS;AAAA,SAA5BM,UAAU,IAAAiB,OAAA;AAU/B,IAAMJ,MAAM,GAAGhB,UAAU,CAACqB,MAAM,CAAC;EAC/BJ,SAAS,EAAE;IACTK,IAAI,EAAE,CAAC;IACPC,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE,QAAQ;IACpBC,eAAe,EAAE;EACnB,CAAC;EACDN,IAAI,EAAE;IACJO,KAAK,EAAE,SAAS;IAChBC,QAAQ,EAAE;EACZ;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}